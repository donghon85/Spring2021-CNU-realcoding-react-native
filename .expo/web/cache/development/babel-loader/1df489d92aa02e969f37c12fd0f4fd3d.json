{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"/Users/haeramkeem/Documents/git/pedu/realcoding/real_coding_React_Native/WeatherDetailScreen.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nvar API_KEY = '3d377c381ecce948e04495dd568bf8d5';\n\nvar queryUrl = function queryUrl(city) {\n  return \"https://api.openweathermap.org/data/2.5/weather?q=\" + city + \"&appid=\" + API_KEY;\n};\n\nvar WeatherDetailScreen = function (_React$Component) {\n  _inherits(WeatherDetailScreen, _React$Component);\n\n  var _super = _createSuper(WeatherDetailScreen);\n\n  function WeatherDetailScreen(props) {\n    var _this;\n\n    _classCallCheck(this, WeatherDetailScreen);\n\n    _this = _super.call(this, props);\n    _this.state = {\n      isLoading: true\n    };\n    return _this;\n  }\n\n  _createClass(WeatherDetailScreen, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      var city = this.props.route.params.city;\n      fetch(queryUrl(city)).then(function (response) {\n        return response.json();\n      }).then(function (info) {\n        console.log(info);\n\n        _this2.setState(_objectSpread(_objectSpread({}, info), {}, {\n          isLoading: false\n        }));\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          city = _this$props.route.params.city,\n          navigation = _this$props.navigation;\n      navigation.setOptions({\n        title: \"Weather Information: \" + city\n      });\n\n      if (this.state.isLoading) {\n        return React.createElement(View, {\n          style: styles.container,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 17\n          }\n        }, React.createElement(Text, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 21\n          }\n        }, \"\\uB370\\uC774\\uD130\\uB97C \\uBD88\\uB7EC\\uC624\\uB294 \\uC911\\uC785\\uB2C8\\uB2E4.\"));\n      }\n\n      var celsius = this.state.main.temp - 273.15;\n      return React.createElement(View, {\n        style: styles.container,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 13\n        }\n      }, React.createElement(Text, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 17\n        }\n      }, \"\\uC628\\uB3C4: \", celsius.toFixed(1)));\n    }\n  }]);\n\n  return WeatherDetailScreen;\n}(React.Component);\n\nexport { WeatherDetailScreen as default };\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff'\n  }\n});","map":{"version":3,"sources":["/Users/haeramkeem/Documents/git/pedu/realcoding/real_coding_React_Native/WeatherDetailScreen.js"],"names":["React","API_KEY","queryUrl","city","WeatherDetailScreen","props","state","isLoading","route","params","fetch","then","response","json","info","console","log","setState","navigation","setOptions","title","styles","container","celsius","main","temp","toFixed","Component","StyleSheet","create","flex","backgroundColor"],"mappings":";;;;;;;;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;;;;AAGA,IAAMC,OAAO,GAAG,kCAAhB;;AACA,IAAMC,QAAQ,GAAG,SAAXA,QAAW,CAACC,IAAD;AAAA,gEAA+DA,IAA/D,eAA6EF,OAA7E;AAAA,CAAjB;;IAEqBG,mB;;;;;AACjB,+BAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACf,8BAAMA,KAAN;AAEA,UAAKC,KAAL,GAAa;AACTC,MAAAA,SAAS,EAAE;AADF,KAAb;AAHe;AAMlB;;;;WAED,6BAAoB;AAAA;;AAChB,UAEkBJ,IAFlB,GAII,KAAKE,KAJT,CACIG,KADJ,CAEQC,MAFR,CAEkBN,IAFlB;AAMAO,MAAAA,KAAK,CAACR,QAAQ,CAACC,IAAD,CAAT,CAAL,CACKQ,IADL,CACU,UAAAC,QAAQ;AAAA,eAAIA,QAAQ,CAACC,IAAT,EAAJ;AAAA,OADlB,EAEKF,IAFL,CAEU,UAAAG,IAAI,EAAI;AACVC,QAAAA,OAAO,CAACC,GAAR,CAAYF,IAAZ;;AACA,QAAA,MAAI,CAACG,QAAL,iCACOH,IADP;AAEIP,UAAAA,SAAS,EAAE;AAFf;AAIH,OARL;AASH;;;WAED,kBAAS;AACL,wBAKI,KAAKF,KALT;AAAA,UAEkBF,IAFlB,eACIK,KADJ,CAEQC,MAFR,CAEkBN,IAFlB;AAAA,UAIIe,UAJJ,eAIIA,UAJJ;AAMAA,MAAAA,UAAU,CAACC,UAAX,CAAsB;AAAEC,QAAAA,KAAK,4BAA0BjB;AAAjC,OAAtB;;AAEA,UAAI,KAAKG,KAAL,CAAWC,SAAf,EAA0B;AACtB,eACI,oBAAC,IAAD;AAAM,UAAA,KAAK,EAAEc,MAAM,CAACC,SAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACI,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yFADJ,CADJ;AAKH;;AAED,UAAIC,OAAO,GAAG,KAAKjB,KAAL,CAAWkB,IAAX,CAAgBC,IAAhB,GAAuB,MAArC;AAEA,aACI,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAEJ,MAAM,CAACC,SAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BAAWC,OAAO,CAACG,OAAR,CAAgB,CAAhB,CAAX,CADJ,CADJ;AAKH;;;;EAnD4C1B,KAAK,CAAC2B,S;;SAAlCvB,mB;AAsDrB,IAAMiB,MAAM,GAAGO,UAAU,CAACC,MAAX,CAAkB;AAC7BP,EAAAA,SAAS,EAAE;AACPQ,IAAAA,IAAI,EAAE,CADC;AAEPC,IAAAA,eAAe,EAAE;AAFV;AADkB,CAAlB,CAAf","sourcesContent":["import React from 'react';\nimport { StyleSheet, View, Text } from 'react-native';\n\nconst API_KEY = '3d377c381ecce948e04495dd568bf8d5';\nconst queryUrl = (city) => `https://api.openweathermap.org/data/2.5/weather?q=${city}&appid=${API_KEY}`\n\nexport default class WeatherDetailScreen extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            isLoading: true,\n        };\n    }\n\n    componentDidMount() {\n        const {\n            route: {\n                params: { city },\n            },\n        } = this.props;\n\n        fetch(queryUrl(city))\n            .then(response => response.json())\n            .then(info => {\n                console.log(info);\n                this.setState({\n                    ...info,\n                    isLoading: false,\n                });\n            });\n    }\n\n    render() {\n        const {\n            route: {\n                params: { city },\n            },\n            navigation,\n        } = this.props;\n        navigation.setOptions({ title: `Weather Information: ${city}` });\n\n        if (this.state.isLoading) {\n            return (\n                <View style={styles.container}>\n                    <Text>데이터를 불러오는 중입니다.</Text>\n                </View>\n            )\n        }\n\n        let celsius = this.state.main.temp - 273.15;\n\n        return (\n            <View style={styles.container}>\n                <Text>온도: {celsius.toFixed(1)}</Text>\n            </View>\n        );\n    }\n}\n\nconst styles = StyleSheet.create({\n    container: {\n        flex: 1,\n        backgroundColor: '#fff',\n    },\n});"]},"metadata":{},"sourceType":"module"}