{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"/Users/haeramkeem/Documents/git/pedu/realcoding/real_coding_React_Native/CityList.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React from 'react';\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\n\nvar CityList = function (_React$Component) {\n  _inherits(CityList, _React$Component);\n\n  var _super = _createSuper(CityList);\n\n  function CityList(props) {\n    var _this;\n\n    _classCallCheck(this, CityList);\n\n    _this = _super.call(this, props);\n    _this.state = {\n      cities: []\n    };\n    return _this;\n  }\n\n  _createClass(CityList, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      fetch('https://raw.githubusercontent.com/example0312/weather-crawler/e3168f2b4e316691f8ab385f738783976eef7f0d/availableCityNames').then(function (response) {\n        return response.json();\n      }).then(function (cities) {\n        _this2.setState({\n          cities: cities\n        });\n      });\n    }\n  }, {\n    key: \"onPressCity\",\n    value: function onPressCity(item) {\n      console.log('onPressCity =', item);\n      this.props.navigation.navigate('Detail', {\n        city: item\n      });\n    }\n  }, {\n    key: \"renderItem\",\n    value: function renderItem(city) {\n      var _this3 = this;\n\n      return React.createElement(TouchableOpacity, {\n        style: styles.item,\n        onPress: function onPress() {\n          return _this3.onPressCity(city);\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 7\n        }\n      }, React.createElement(Text, {\n        style: styles.text,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 9\n        }\n      }, city));\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this4 = this;\n\n      return React.createElement(FlatList, {\n        style: styles.container,\n        renderItem: function renderItem(_ref) {\n          var item = _ref.item;\n          return _this4.renderItem(item);\n        },\n        keyExtractor: function keyExtractor(item) {\n          return item;\n        },\n        data: this.state.cities,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 7\n        }\n      });\n    }\n  }]);\n\n  return CityList;\n}(React.Component);\n\nexport { CityList as default };\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff'\n  },\n  item: {\n    flex: 1,\n    height: 50,\n    justifyContent: 'center',\n    borderWidth: 1,\n    borderColor: 'orange'\n  },\n  text: {\n    fontSize: 20,\n    textAlign: 'center'\n  }\n});","map":{"version":3,"sources":["/Users/haeramkeem/Documents/git/pedu/realcoding/real_coding_React_Native/CityList.js"],"names":["React","CityList","props","state","cities","fetch","then","response","json","setState","item","console","log","navigation","navigate","city","styles","onPressCity","text","container","renderItem","Component","StyleSheet","create","flex","backgroundColor","height","justifyContent","borderWidth","borderColor","fontSize","textAlign"],"mappings":";;;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;;;;;;IAGqBC,Q;;;;;AACnB,oBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACjB,8BAAMA,KAAN;AAEA,UAAKC,KAAL,GAAa;AACXC,MAAAA,MAAM,EAAE;AADG,KAAb;AAHiB;AAMlB;;;;WAED,6BAAoB;AAAA;;AAClBC,MAAAA,KAAK,CAAC,2HAAD,CAAL,CACGC,IADH,CACQ,UAAAC,QAAQ;AAAA,eAAIA,QAAQ,CAACC,IAAT,EAAJ;AAAA,OADhB,EAEGF,IAFH,CAEQ,UAAAF,MAAM,EAAI;AACd,QAAA,MAAI,CAACK,QAAL,CAAc;AACZL,UAAAA,MAAM,EAANA;AADY,SAAd;AAGD,OANH;AAOD;;;WAED,qBAAYM,IAAZ,EAAkB;AAChBC,MAAAA,OAAO,CAACC,GAAR,CAAY,eAAZ,EAA6BF,IAA7B;AACA,WAAKR,KAAL,CAAWW,UAAX,CAAsBC,QAAtB,CAA+B,QAA/B,EAAyC;AACvCC,QAAAA,IAAI,EAAEL;AADiC,OAAzC;AAGD;;;WAED,oBAAWK,IAAX,EAAiB;AAAA;;AACf,aACE,oBAAC,gBAAD;AAAkB,QAAA,KAAK,EAAEC,MAAM,CAACN,IAAhC;AAAsC,QAAA,OAAO,EAAE;AAAA,iBAAM,MAAI,CAACO,WAAL,CAAiBF,IAAjB,CAAN;AAAA,SAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAEC,MAAM,CAACE,IAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAA2BH,IAA3B,CADF,CADF;AAKD;;;WAED,kBAAS;AAAA;;AACP,aACE,oBAAC,QAAD;AAAU,QAAA,KAAK,EAAEC,MAAM,CAACG,SAAxB;AACU,QAAA,UAAU,EAAE;AAAA,cAAGT,IAAH,QAAGA,IAAH;AAAA,iBAAc,MAAI,CAACU,UAAL,CAAgBV,IAAhB,CAAd;AAAA,SADtB;AAEU,QAAA,YAAY,EAAE,sBAAAA,IAAI;AAAA,iBAAIA,IAAJ;AAAA,SAF5B;AAGU,QAAA,IAAI,EAAE,KAAKP,KAAL,CAAWC,MAH3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF;AAOD;;;;EA1CmCJ,KAAK,CAACqB,S;;SAAvBpB,Q;AA6CrB,IAAMe,MAAM,GAAGM,UAAU,CAACC,MAAX,CAAkB;AAC/BJ,EAAAA,SAAS,EAAE;AACTK,IAAAA,IAAI,EAAE,CADG;AAETC,IAAAA,eAAe,EAAE;AAFR,GADoB;AAK/Bf,EAAAA,IAAI,EAAE;AACJc,IAAAA,IAAI,EAAE,CADF;AAEJE,IAAAA,MAAM,EAAE,EAFJ;AAGJC,IAAAA,cAAc,EAAE,QAHZ;AAKJC,IAAAA,WAAW,EAAE,CALT;AAMJC,IAAAA,WAAW,EAAE;AANT,GALyB;AAa/BX,EAAAA,IAAI,EAAE;AACJY,IAAAA,QAAQ,EAAE,EADN;AAEJC,IAAAA,SAAS,EAAE;AAFP;AAbyB,CAAlB,CAAf","sourcesContent":["import React from 'react';\nimport { FlatList, StyleSheet, Text, TouchableOpacity } from 'react-native';\n\nexport default class CityList extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      cities: [],\n    };\n  }\n\n  componentDidMount() {\n    fetch('https://raw.githubusercontent.com/example0312/weather-crawler/e3168f2b4e316691f8ab385f738783976eef7f0d/availableCityNames')\n      .then(response => response.json())\n      .then(cities => {\n        this.setState({\n          cities\n        });\n      });\n  }\n\n  onPressCity(item) {\n    console.log('onPressCity =', item);\n    this.props.navigation.navigate('Detail', {\n      city: item\n    });\n  }\n\n  renderItem(city) {\n    return (\n      <TouchableOpacity style={styles.item} onPress={() => this.onPressCity(city)}>\n        <Text style={styles.text}>{city}</Text>\n      </TouchableOpacity>\n    );\n  }\n\n  render() {\n    return (\n      <FlatList style={styles.container}\n                renderItem={({ item }) => this.renderItem(item)}\n                keyExtractor={item => item}\n                data={this.state.cities}\n      />\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n  },\n  item: {\n    flex: 1,\n    height: 50,\n    justifyContent: 'center',\n\n    borderWidth: 1,\n    borderColor: 'orange',\n  },\n  text: {\n    fontSize: 20,\n    textAlign: 'center',\n  }\n});"]},"metadata":{},"sourceType":"module"}